#!/bin/bash

USER_NAME=${USER_NAME:-gatling-user}
echo "User name is set to $USER_NAME"

PUID=${PUID:-911}
PGID=${PGID:-911}

if [[ "$USER_NAME" != "gatling-user" ]]; then
  usermod -l "$USER_NAME" gatling-user
  groupmod -n "$USER_NAME" gatling-user
fi

groupmod -o -g "$PGID" "$USER_NAME"
usermod -o -u "$PUID" "$USER_NAME"

echo "
───────────────────────────────────────
GID/UID
───────────────────────────────────────
User UID:    $(id -u "${USER_NAME}")
User GID:    $(id -g "${USER_NAME}")
───────────────────────────────────────
"

# create folders
mkdir -p \
    /config/{.ssh,ssh_host_keys,logs/openssh} \
    /run/sshd

# symlink out ssh config directory
if [[ ! -L /etc/ssh ]]; then
    if [[ ! -f /config/ssh_host_keys/sshd_config ]]; then
        sed -i '/#PidFile/c\PidFile \/config\/sshd.pid' /etc/ssh/sshd_config
        cp -a /etc/ssh/sshd_config /config/ssh_host_keys/
    fi
    rm -Rf /etc/ssh
    ln -s /config/ssh_host_keys /etc/ssh
    ssh-keygen -A
fi

# set umask for sftp
UMASK=${UMASK:-022}
sed -i "s|/usr/lib/ssh/sftp-server$|/usr/lib/ssh/sftp-server -u ${UMASK}|g" /etc/ssh/sshd_config

# set key auth in file
if [[ ! -f /config/.ssh/authorized_keys ]]; then
    touch /config/.ssh/authorized_keys
fi

if [[ -n "$PUBLIC_KEY" ]]; then
    if ! grep -q "${PUBLIC_KEY}" /config/.ssh/authorized_keys; then
        echo "$PUBLIC_KEY" >> /config/.ssh/authorized_keys
        echo "Public key from env variable added"
    fi
fi

if [[ -n "$PUBLIC_KEY_URL" ]]; then
    PUBLIC_KEY_DOWNLOADED=$(curl -s "$PUBLIC_KEY_URL")
    if ! grep -q "$PUBLIC_KEY_DOWNLOADED" /config/.ssh/authorized_keys; then
        echo "$PUBLIC_KEY_DOWNLOADED" >> /config/.ssh/authorized_keys
        echo "Public key downloaded from '$PUBLIC_KEY_URL' added"
    fi
fi

if [[ -n "$PUBLIC_KEY_FILE" ]] && [[ -f "$PUBLIC_KEY_FILE" ]]; then
    PUBLIC_KEY2=$(cat "$PUBLIC_KEY_FILE")
    if ! grep -q "$PUBLIC_KEY2" /config/.ssh/authorized_keys; then
        echo "$PUBLIC_KEY2" >> /config/.ssh/authorized_keys
        echo "Public key from file added"
    fi
fi

if [[ -d "$PUBLIC_KEY_DIR" ]]; then
    for F in "${PUBLIC_KEY_DIR}"/*; do
        PUBLIC_KEYN=$(cat "$F")
        if ! grep -q "$PUBLIC_KEYN" /config/.ssh/authorized_keys; then
            echo "$PUBLIC_KEYN" >> /config/.ssh/authorized_keys
            echo "Public key from file '$F' added"
        fi
    done
fi

# permissions
chown -R "${USER_NAME}":"${USER_NAME}"  /config
chmod go-w /config
chmod 700 /config/.ssh
chmod 600 /config/.ssh/authorized_keys

DAEMON=sshd

stop() {
  echo "Received SIGINT or SIGTERM."
  echo "Shutting down $DAEMON."
  # Get PID
  pid=$(cat "/var/run/$DAEMON/$DAEMON.pid")
  # Signal the daemon
  kill -SIGTERM "$pid"
  # Wait for exit
  wait "$pid"
  # All done
  echo "Exiting"
}

if [ "$(basename "$1")" == "$DAEMON" ]; then
  echo "Starting $DAEMON"
  trap stop SIGINT SIGTERM
  "$@" &
  pid="$!"
  mkdir -p "/var/run/$DAEMON" && \
    echo "$pid" > "/var/run/$DAEMON/$DAEMON.pid"
  wait "$pid" && exit $?
else
  exec "$@"
fi
